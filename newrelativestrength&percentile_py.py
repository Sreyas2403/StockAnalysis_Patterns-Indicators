# -*- coding: utf-8 -*-
"""NewRelativeStrength&Percentile.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fJIgz6djZ2eA4oGFbr1qjB6-u6tucRHQ
"""

import pandas as pd
import yfinance as yf
import numpy as np
from scipy import stats

# Load the CSV file with stock symbols
file_path = '/content/NSE_stocks.csv'
stock_symbols_df = pd.read_csv(file_path)

# Extract stock symbols
symbols = stock_symbols_df['SYMBOL'].tolist()

# Set the time period for data retrieval
end_date = pd.to_datetime('today').strftime('%Y-%m-%d')
start_date = (pd.to_datetime('today') - pd.DateOffset(years=1)).strftime('%Y-%m-%d')

# Fetch Nifty50 data for the same period
nifty50_data = yf.download('^NSEI', start=start_date, end=end_date)
nifty50_close_today = nifty50_data['Close'].iloc[-1]
nifty50_close_last_year = nifty50_data['Close'].iloc[0]

# Initialize list to store NRS values
nrs_values = []

# Loop through each stock symbol to calculate NRS
for symbol in symbols:
    try:
        stock_data = yf.download(symbol + '.NS', start=start_date, end=end_date)
        if not stock_data.empty:
            stock_close_today = stock_data['Close'].iloc[-1]
            stock_close_last_year = stock_data['Close'].iloc[0]

            # Calculate New Relative Strength (NRS)
            nrs = (stock_close_today - stock_close_last_year) / (nifty50_close_today - nifty50_close_last_year)
            nrs_values.append(nrs)
        else:
            nrs_values.append(np.nan)  # Append NaN if no data is found for the stock
    except Exception as e:
        print(f"Could not retrieve data for {symbol}: {e}")
        nrs_values.append(np.nan)

# Add NRS values to the DataFrame
stock_symbols_df['NRS'] = nrs_values

# Calculate percentile rank for each stock's NRS
stock_symbols_df['NRS Percentile'] = stock_symbols_df['NRS'].rank(pct=True)

# Save the results to a new CSV file
output_file = 'NRS_NIFTY50_1967stocks.csv'
stock_symbols_df.to_csv(output_file, index=False)

print("New Relative Strength (NRS) and percentiles have been calculated and saved to", output_file)

